{"version":3,"file":"file_buttons.min.js","sources":["../src/file_buttons.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module   local_syllabusuploader\n * @copyright 2023 onwards Louisiana State University\n * @copyright 2023 onwards David Lowe, Robert Russo\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n define([\n    'jquery',\n    'local_syllabusuploader/notifications',\n    'local_syllabusuploader/su_lib',\n    'local_syllabusuploader/refresh'\n], function($, noti, SULib, Refresh) {\n    'use strict';\n    return {\n        /**\n         * Confirm the button action.\n         *\n         * @param {object} params Data for the noti message.\n         * @return bool - If true then it's array or obj\n         */\n        confirmCheckExecute: function (params) {\n            // First let's confirm.\n            noti.callYesNoModi(params).then(function (response) {\n                // console.log(\"yesNo Modal, what is response: \", response);\n                if (response.status == true) {\n                    return response;\n                }\n\n            }).then(function (response) {\n\n                // We need to check if the file exists.\n                SULib.check_file_exists(response).then(function (response) {\n                    if (response.success == false) {\n                        $('html,body').scrollTop(0);\n                        noti.callNoti({\n                            message: response.msg,\n                            type: \"fail\"\n                        });\n\n                    } else {\n                        // Get the current list of files from the folder that's indicated\n                        // in the settings page.\n                        if (sessionStorage.getItem('debugging') === \"true\") {\n                            console.log(\"Debugging: check file exists response is: \", response);\n                        }\n                        SULib.get_file_list(response).then(function (response) {\n                            Refresh.refreshGeneralFiles(response);\n                        });\n                    }\n                });\n            });\n        },\n    };\n});\n"],"names":["define","$","noti","SULib","Refresh","confirmCheckExecute","params","callYesNoModi","then","response","status","check_file_exists","success","scrollTop","callNoti","message","msg","type","sessionStorage","getItem","console","log","get_file_list","refreshGeneralFiles"],"mappings":";;;;;;AAsBCA,6CAAO,CACJ,SACA,uCACA,gCACA,mCACD,SAASC,EAAGC,KAAMC,MAAOC,eAEjB,CAOHC,oBAAqB,SAAUC,QAE3BJ,KAAKK,cAAcD,QAAQE,MAAK,SAAUC,aAEf,GAAnBA,SAASC,cACFD,YAGZD,MAAK,SAAUC,UAGdN,MAAMQ,kBAAkBF,UAAUD,MAAK,SAAUC,UACrB,GAApBA,SAASG,SACTX,EAAE,aAAaY,UAAU,GACzBX,KAAKY,SAAS,CACVC,QAASN,SAASO,IAClBC,KAAM,WAMkC,SAAxCC,eAAeC,QAAQ,cACvBC,QAAQC,IAAI,6CAA8CZ,UAE9DN,MAAMmB,cAAcb,UAAUD,MAAK,SAAUC,UACzCL,QAAQmB,oBAAoBd"}