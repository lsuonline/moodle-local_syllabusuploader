{"version":3,"file":"su_lib.min.js","sources":["../src/su_lib.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Proctor U File Uploader\n * @modual    local_syllabusuploader\n * @copyright 2023 onwards Louisiana State University\n * @copyright 2023 onwards David Lowe, Robert Russo\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'local_syllabusuploader/jaxy'],\n    function($, jaxy) {\n    'use strict';\n    return {\n\n        /**\n         * Store data in sessionStorage so it's available throughout\n         *\n         * @return null\n         */\n        preLoadConfig: function() {\n            var window_stat = {};\n\n            if (window.__SERVER__ === \"true\" || window.__SERVER__ === true) {\n                if (typeof (window.__INITIAL_STATE__) === 'string') {\n                    try {\n                        window_stat = JSON.parse(window.__INITIAL_STATE__);\n                        delete window.__INITIAL_STATE__;\n                        window.__SERVER__ = false;\n                    } catch (error) {\n                        console.log(error);\n                    }\n                }\n            } else {\n                console.log(\"WARNING: window.__SERVER__ was not set\");\n            }\n            for (var key in window_stat) {\n                if (typeof(window_stat[key]) === 'object') {\n                    let subkey_list = window_stat[key];\n                    for (var subkey in subkey_list) {\n                        sessionStorage.setItem(subkey, subkey_list[subkey]);\n                    }\n                } else {\n                    sessionStorage.setItem(key, window_stat[key]);\n                }\n            }\n        },\n\n        /**\n         * Post data to a URL. This is a form submit and will cause a page reload POSTing data.\n         *\n         * @param {string} redirectUrl to post to, self if nothing passed.\n         * @param {object} data the json object to post\n         * @return {Promise}\n         */\n        pushPost: function(redirectUrl, data) {\n\n            var input_part = '',\n                form_part = '',\n                form;\n\n            for (var key in data) {\n                var value = data[key];\n                input_part += '<input type=\"hidden\" value=\"' + value + '\" name=\"' + key + '\"></input>';\n            }\n\n            form_part = '<form method=\"POST\" style=\"display: none;\">' + input_part + '</form>';\n            form = $(form_part);\n            $('body').append(form);\n            $(form).submit();\n        },\n\n        /**\n         * While developing call this to avoid \"SULib is defined but never used.\"\n         *\n         * @return {Promise}\n         */\n        useless: function () {\n            console.log(\"Don't be useless!\");\n            return;\n        },\n\n        /**\n         * Get the token for the current selected URL\n         *\n         * @param {object} params\n         * @return {Promise}\n         */\n        testWebServices: function (params) {\n            return this.jaxyRemotePromise(params);\n        },\n\n        /**\n         * Get the file list.\n         *\n         * @return {Promise}\n         */\n        get_file_list: function () {\n            return this.jaxyPromise({\n                'call': 'get_file_list',\n                'class': 'sufile'\n            });\n        },\n\n        /**\n         * Simple request to check if the file already exist.\n         *\n         * @param {string} params\n         * @return {Promise}\n         */\n        check_file_exists: function (params) {\n            var to_send = {\n                'mfileid': params.data.mfileid,\n                'sufileid': params.data.record\n            };\n            return this.jaxyPromise({\n                'call': 'check_file_exists',\n                'params': to_send,\n                'class': 'sufile'\n            });\n        },\n\n        /**\n         * Get the token for the current selected URL\n         *\n         * @param {string} url\n         * @return {Promise}\n         */\n        getTokenForURL: function (url) {\n            return this.jaxyPromise({\n                'call': 'get_token',\n                'params': {\n                    'url': url\n                },\n                'class': 'router'\n            });\n        },\n\n        /**\n         * Check the URL to see if it's valid. This is a work in progress.\n         *\n         * @param {string} urlString\n         * @return {string}\n         */\n        isValidUrl: function (urlString) {\n            var urlPattern = new RegExp('^(https?:\\\\/\\\\/)?'+ // validate protocol\n            '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|'+ // validate domain name\n            '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))'+ // validate OR ip (v4) address\n            '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*'+ // validate port and path\n            '(\\\\?[;&a-z\\\\d%_.~+=-]*)?'+ // validate query string\n            '(\\\\#[-a-z\\\\d_]*)?$','i'); // validate fragment locator\n            return !!urlPattern.test(urlString);\n        },\n\n        /* ====================================================================== */\n        /* ===================      AJAX Functions      ========================= */\n        /* ====================================================================== */\n        /**\n         * Make an AJAX call and return a json object, from server,\n         *  wrapping the AJAX call in a promise.\n         * @param {object} params The details of the ajax call.\n         * @return {Promise}\n         */\n        jaxyPromise: function (params) {\n            console.log(\"jaxyPromise() -> what is params to be stringified: \", params);\n            var promiseObj = new Promise(function (resolve) {\n                jaxy.SUjax(JSON.stringify(params)).then(function (response) {\n                    resolve(response);\n                });\n            });\n            return promiseObj;\n        },\n\n        /**\n         * Make an AJAX call and return a json object, from REMOTE server,\n         *  wrapping the AJAX call in a promise.\n         * @param {object} params the details of the ajax call\n         * @return {Promise}\n         */\n        jaxyRemotePromise: function (params) {\n            var promiseObj = new Promise(function (resolve) {\n                jaxy.SURemoteAjax(params).then(function (response) {\n                    resolve(response);\n                });\n            });\n            return promiseObj;\n        },\n    };\n});\n"],"names":["define","$","jaxy","preLoadConfig","window_stat","window","__SERVER__","__INITIAL_STATE__","JSON","parse","error","console","log","key","subkey_list","subkey","sessionStorage","setItem","pushPost","redirectUrl","data","form","input_part","append","submit","useless","testWebServices","params","this","jaxyRemotePromise","get_file_list","jaxyPromise","check_file_exists","to_send","mfileid","record","getTokenForURL","url","isValidUrl","urlString","RegExp","test","Promise","resolve","SUjax","stringify","then","response","SURemoteAjax"],"mappings":";;;;;;;AAuBAA,uCAAO,CAAC,SAAU,gCACd,SAASC,EAAGC,YAEL,CAOHC,cAAe,eACPC,YAAc,MAEQ,SAAtBC,OAAOC,aAA+C,IAAtBD,OAAOC,eACG,iBAA9BD,OAAOE,sBAEXH,YAAcI,KAAKC,MAAMJ,OAAOE,0BACzBF,OAAOE,kBACdF,OAAOC,YAAa,EACtB,MAAOI,OACLC,QAAQC,IAAIF,aAIpBC,QAAQC,IAAI,8CAEX,IAAIC,OAAOT,eACqB,iBAAtBA,YAAYS,KAAoB,KACnCC,YAAcV,YAAYS,SACzB,IAAIE,UAAUD,YACfE,eAAeC,QAAQF,OAAQD,YAAYC,cAG/CC,eAAeC,QAAQJ,IAAKT,YAAYS,OAYpDK,SAAU,SAASC,YAAaC,UAIxBC,KAFAC,WAAa,OAIZ,IAAIT,OAAOO,KAAM,CAElBE,YAAc,+BADFF,KAAKP,KACsC,WAAaA,IAAM,aAI9EQ,KAAOpB,EADK,8CAAgDqB,WAAa,WAEzErB,EAAE,QAAQsB,OAAOF,MACjBpB,EAAEoB,MAAMG,UAQZC,QAAS,WACLd,QAAQC,IAAI,sBAUhBc,gBAAiB,SAAUC,eAChBC,KAAKC,kBAAkBF,SAQlCG,cAAe,kBACJF,KAAKG,YAAY,MACZ,sBACC,YAUjBC,kBAAmB,SAAUL,YACrBM,QAAU,SACCN,OAAOP,KAAKc,iBACXP,OAAOP,KAAKe,eAErBP,KAAKG,YAAY,MACZ,2BACEE,cACD,YAUjBG,eAAgB,SAAUC,YACfT,KAAKG,YAAY,MACZ,mBACE,KACCM,WAEF,YAUjBC,WAAY,SAAUC,mBACD,IAAIC,OAAO,wKAKP,KACDC,KAAKF,YAY7BR,YAAa,SAAUJ,eACnBhB,QAAQC,IAAI,sDAAuDe,QAClD,IAAIe,SAAQ,SAAUC,SACnCzC,KAAK0C,MAAMpC,KAAKqC,UAAUlB,SAASmB,MAAK,SAAUC,UAC9CJ,QAAQI,iBAYpBlB,kBAAmB,SAAUF,eACR,IAAIe,SAAQ,SAAUC,SACnCzC,KAAK8C,aAAarB,QAAQmB,MAAK,SAAUC,UACrCJ,QAAQI"}